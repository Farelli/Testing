#!/bin/bash
#
# first - Required programs and packages install for swgemu development environment
#
# Author: Scurby <scurby@swgemu.com>
#
# Created: Mar 4 2015
#

logger -t first "** FIRST **"

##############################################################################
# Common functions and setup
##############################################################################
yorn() {
  echo -n -e "$@ Y\b"
  read yorn
  case $yorn in
    [Nn]* ) return 1;;
  esac
  return 0
}

logmsg() {
  echo "${tc_smso}**${tc_rmso} $*"
  logger -t first "$*"
}

logstep() {
  let "step=$step + 1"
  echo ${tc_smso}$(head -c $(tput cols) < /dev/zero | tr '\0' '*')${tc_rmso}
  echo "${tc_smso}**${tc_rmso} STEP $step >> $*"
  logger -t first "STEP $step >> $*"
}

step=0
tc_smso=$(tput smso)
tc_rmso=$(tput rmso)

#################
# Required packages
#################
logstep "Required packages."

logmsg  " The following packages or programs are required. Be prepared to enter password for sudo."
logmsg
logmsg	 "gcc, g++, git, gdb, automake, make, libreadline-gplv2-dev "
logmsg	    "libncurses5-dev, libneon27, libaprutil1-dev, libtool "
logmsg	"openjdk-6-jre, openjdk-6-jre-headless, libgtest-dev, screen "
logmsg	  "Lua-5.1 - Berkely DB 5.0 - MySQL Server and Workbench"
logmsg 
cd
if yorn "Would you like to install the required packages now??"; then
  for i in automake g++ gcc gdb git libtool make screen libreadline-gplv2-dev libncurses5-dev libneon27 libaprutil1-dev openjdk-6-jre openjdk-6-jre-headless libgtest-dev
      do
        sudo apt-get update
        logmsg " Installing ${i} ... "
        sudo apt-get -q -y install ${i}
      done
  else
    logmsg " You need to do it before you can build the server. "
    exit 0
fi

#################
# Lua install
# INFO -wget http://www.lua.org/ftp/lua-5.1.4.tar.gz ## saved to home/setup/
#################
logstep "Lua 5.1.4 Install"

dir=~/setup/
lua_base=~/setup/lua-5.1.4.tar.gz
lua_ins=/usr/local/bin/lua

if [ -f $lua_ins ]; then
 logmsg "Great, looks like you have Lua installed.!"
  else
    while ! yorn "Would you like to install Lua 5.1.4 now??"
      do
        echo "***You need to do it before you can build the server.*** )"
        sleep 1
      done
  if [ ! -f $lua_base ]; then
    logmsg "Downloading required lua package to /home/setup/. Please wait.."
    cd $dir
    wget http://www.lua.org/ftp/lua-5.1.4.tar.gz
  fi
  logmsg
  logmsg "Restoring basic lua install from $lua_base"
  logmsg
  for dir in ~/setup/
    do
      cd $dir
      tar xzf ~/setup/lua-5.1.4.tar.gz > /dev/null 2>&1
      cd lua-5.1.4
      sudo make linux install > /dev/null 2>&1
      sudo make test
      cd
    done
  logmsg " "
  logmsg "You have successfully installed Lua if you see 'Hello world, from Lua 5.1!' in the terminal."
  logmsg " "
  lognsg "Installing busted test for lua..."
  sudo apt-get install luarocks
  sudo luarocks install busted
fi
   
####################
# Berkely DB Install
# wget http://download.oracle.com/berkeley-db/db-5.0.32.NC.tar.gz ## saved to home/setup/
####################
# TODO -Remove un-needed files
# rm -R db-5.0.32.NC  NEEDED OR NOT?
####################
logstep "Berkely DB Install"

dir=~/setup/
bdb_base=~/setup/db-5.0.32.NC.tar.gz
bdb_pkg=/usr/local/BerkeleyDB.5.0/include/db.h

if [ -f $bdb_pkg ]; then
  logmsg "Ok looks like you have installed Berkely DB-5.0!"
 else
  while ! yorn " Would you like to install or restore Berkely DB from http://download.oracle.com/berkeley-db/db-5.0.32.NC.tar.gz now?? "
    do
      echo "You need to do it before you can build the server. (cntl+c to exit)"
      sleep 1
    done
  if [ ! -f $bdb_base ]; then
    logmsg "Missing $bdb_base did you remove it?"
    logmsg "Downloading required Bdb package to /home/setup/. Please wait.."
    cd setup
    wget http://download.oracle.com/berkeley-db/db-5.0.32.NC.tar.gz
  fi

    logmsg
    logmsg "Restoring Berkely DB install from $bdb_base"
    logmsg
     for dir in ~/setup/
     do
       cd $dir
       tar xzf ~/setup/db-5.0.32.NC.tar.gz
       cd db-5.0.32.NC
       cd build_unix
       sudo ../dist/configure --enable-cxx > /dev/null 2>&1
       sudo make > /dev/null 2>&1
       sudo make install > /dev/null 2>&1
       cd ..
       cd ..
       echo "/usr/local/BerkeleyDB.5.0/lib" | sudo tee -a /etc/ld.so.conf
       sudo ldconfig
     done
  logmsg
  logmsg "Berkely DB installed. "
  logmsg
fi

##############################################################################
# MySQL Install  
##############################################################################
logstep "MySQL Install"

mysql_pkg=/usr/share/mysql/mysql_system_tables.sql
if [ -f $mysql_pkg ]; then
  logmsg "Looks like MySQL is installed!"
else
  while ! yorn "Would you like to install MySQL now??"
    do
      echo "You need to do it before you can build and run the server. (cntl+c to exit)"
      sleep 1
    done
    logmsg " $mysql_pkg not found. "
    logmsg
    logmsg " Installing MySQL... "
    logmsg
  cd
  sudo apt-get install -q -y mysql-server-core-5.5
  sudo apt-get install -q -y mysql-server-5.5
  sudo apt-get install -q -y mysql-workbench # not required. very useful.
fi

######################
# Remove un-needed files
######################
logstep "Finalizing install and removing un-needed files."

sudo apt-get upgrade
sudo apt-get autoremove
sudo service mysql start
cd $dir
rm db-5.0.32.NC.tar.gz
rm lua-5.1.4.tar.gz
#rm -R lua-5.1.4 
#rm -R db-5.0.32.NC
logmsg 
logmsg "Run the 'first' script at any time to check installation of required programs."
logmsg
logmsg 
logmsg "You should be ready to run the 'start' script."
logmsg 

if yorn "Would you like to run 'start' now?'?"; then
      ~/bin/start
fi
exit 0
